NAME: Sebastian Demian 

* Instructions

This file contains your log consisting of notes and experiments conducted during the course.  You must make entries this file each
week.

This file must be completed using org-mode syntax.  You can edit in org-mode using the Emacs text
editor.  The org-mode manual can be found online, but it might be easier to read something like:

  http://www.linuxjournal.com/article/9116
  http://sachachua.com/blog/2008/01/outlining-your-notes-with-org/
  https://github.com/novoid/org-mode-workshop/blob/master/featureshow/org-mode-teaser.org

* Week 01 (2014-09-11 to 2014-09-17)
** tasks

- [X] Installed Virtualbox
- [X] created Ubuntu VM
- [X] installed software within Ubuntu VM
- [X] completed Emacs tutorial
- [X] browsed http://orgmode.org/guide/index.html
- [X] watched http://jaderholm.com/screencasts.html
- [X] created an org-mode document
- [X] ran SBT and the csp.net.ServerDemoIO
- [X] *optional* watched http://orgmode.org/talks.html
- [X] read about org-mode checkboxes :-)

** experiments
- [X] Tried to install vim org-mode plugin but failed :)
- [X] Executed and tried to memorize all commands shown in class
- [X] Install virtualbox-guest-dkms package which allows me to resize the ubuntu
  screen as well as the resolution inside virtualbox.
* Week 02 (2014-09-18 to 2014-09-23)
** Tasks
  - [X] read http://www.joelonsoftware.com/articles/Unicode.html
  - [X] read Textbook chapter: Streams
  - [X] read Textbook chapter: Looking Up Internet Addresses
  - [X] read Textbook chapter: Sockets for Clients
  - [X] read Textbook chapter: Sockets for Servers
** Experiments
 - Created a client - server application in java
* Week 03 (2014-09-25 to 2014-09-30)
** Tasks
  - [X] read Textbook chapter: Threads
  - [X] ran all code in week 2 class lectures with netcat / socat (as appropriate)
** Experiments
  - read about low latency message transmission in java
  - read about Tibco FTL, message retransmissions, and how garbage collector
affects performance
* Week 04 (2014-10-02 to 2014-10-07)
 - [X] ran all code in week 3 class lectures (concurrency)
** Experiments
   - read about threads, livelock, countdown latch in java

* Week 05 (2014-10-09 to 2014-10-14)
   - [X] read Textbook chapter: Non-Blocking I/O
   - [X] read http://web.stanford.edu/~ouster/cgi-bin/papers/threads.pdf
   - [X] *OPTIONAL* read https://www.usenix.org/legacy/events/hotos03/tech/full_papers/vonbehren/vonbehren.pdf
   - [X] *OPTIONAL* browse "The C10K problem" http://www.kegel.com/c10k.html

** Experiments
   - created a sample program that increments a counter. There are n threads that increment n
     counters in an array, and one thread that does the total and increments the final counter.
   - I'm expecting this to be faster than a regular incrementer because threads have increase
     access to the variable.

* Week 06 (2014-10-16 to 2014-10-21) (Midterm Exam)
   - [X] ran all code in non-blocking I/O class lectures (java.nio and Netty)
** Experiments
   - [X] Read about Fix Protocol and SBE Messaging
  
* Week 07 (2014-10-23 to 2014-10-28)
   - [X] ran all code in week 7 class lectures
** Experiments
   - [X] Reading about Reactor Framework

* Week 08 (2014-10-30 to 2014-11-04)
- [X] Java NIO is not such a pain after all

** Experiments 
- [X] Finished reading the documentation for Reactor
- [X] Read The Reactive Manifesto

* Week 09 (2014-11-06 to 2014-11-11)
- [X] Ran all of the Akka examples
** Experiments
- [X] Played around with akka and realized it might be a better fit for my project
  
* Week 10 (2014-11-13 to 2014-11-18)
* Local Variables

Local Variables:
mode: org
fill-column: 100
End:
